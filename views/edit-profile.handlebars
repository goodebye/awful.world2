<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" type="text/css" href="/css/posteditor.css">
        <title>create post</title>
    </head>
    <body>

        <div id="left-half">
                <div id="editor"></div> 
                <button type="button" value="" onclick="postIt()">save it</button>
                <button type="button" value="update" onclick="updatePreview()">update preview</button>
        </div>

        <div id="post-preview">
            <iframe id="preview-iframe"></iframe>
        </div>

        <button id="toggle-visibility" onclick="toggleEditor()">t<br/>o<br/>g<br/>g<br/>l<br/>e</button>



        <script src="/js/ace.js" type="text/javascript" charset="utf-8"></script>
        <script src="/js/ace-mode-html.js" type="text/javascript" charset="utf-8"></script>

        <script>
            var editor = ace.edit("editor");
            //editor.setTheme("ace/theme/monokai");
            editor.setValue(`{{{editorProfile}}}`);
            editor.getSession().setMode("ace/mode/html");

           function updatePreview() {
               console.log("hey");
              var XHR = new XMLHttpRequest();
              var urlEncodedData = "";
              var urlEncodedDataPairs = [];
              var name;

               var data = { profilePreview: editor.getValue() }

              // Turn the data object into an array of URL-encoded key/value pairs.
              for(name in data) {
                urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));
              }

              // Combine the pairs into a single string and replace all %-encoded spaces to
              // the '+' character; matches the behaviour of browser form submissions.
              urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');

              // Define what happens on successful data submission
              XHR.onload = function(event) {
                  document.getElementById('preview-iframe').src = `/{{user.username}}?preview=1`;
              };

              // Define what happens in case of error
              XHR.addEventListener('error', function(event) {
                console.log('oops! something went wrong babe.');
              });

              // Set up our request
              XHR.open('POST', '/edit-profile/update');

              // Add the required HTTP header for form data POST requests
              XHR.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

              // Finally, send our data.
              XHR.send(urlEncodedData);
           }

            function toggleEditor() {
                if (document.getElementById("left-half").style.display == "none") {
                    document.getElementById("left-half").style.display = "initial";
                    // document.getElementById("toggle-visibility").innerHTML = "<";
                    document.getElementById("toggle-visibility").style.left = "50%";
                    document.getElementById("post-preview").style.width = "50%";
                }
                else {
                    document.getElementById("left-half").style.display = "none";
                    document.getElementById("toggle-visibility").style.left = "0%";
                    document.getElementById("post-preview").style.width = "100%";
                    // document.getElementById("toggle-visibility").innerHTML = ">";
                }
            }

            function postIt() {
                method = "post"; // Set method to post by default if not specified.

                params = {
                   profile: editor.getValue()
                }
                path = "/edit-profile";

                // The rest of this code assumes you are not using a library.
                // It can be made less wordy if you use one.
                var form = document.createElement("form");
                form.setAttribute("method", method);
                form.setAttribute("action", path);

                for(var key in params) {
                    if(params.hasOwnProperty(key)) {
                        var hiddenField = document.createElement("input");
                        hiddenField.setAttribute("type", "hidden");
                        hiddenField.setAttribute("name", key);
                        hiddenField.setAttribute("value", params[key]);

                        form.appendChild(hiddenField);
                    }
                }

                document.body.appendChild(form);
                form.submit();
            }

            updatePreview();
        </script>
    </body>
</html>
