<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" type="text/css" href="/css/posteditor.css">
        <title>create post</title>
    </head>
    <body>

        <div id="left-half">
            <div id="title-container"><input value="{{post.title}}" id="title" placeholder="your title here"></input></div>
                <div id="editor"></div> 
                <button type="button" value="post it" onclick="postIt(true)">post it</button>
                <button type="button" value="save draft" onclick="postIt(false)">save draft</button>
                <button type="button" value="update" onclick="updatePreview()">update preview</button>

                <span id="post-id">post id: {{post._id}}</span>
        </div>

        <div id="post-preview">
            <iframe id="preview-iframe"></iframe>
        </div>

        <button id="toggle-visibility" onclick="toggleEditor()">t<br/>o<br/>g<br/>g<br/>l<br/>e</button>

        <script src="/js/ace.js" type="text/javascript" charset="utf-8"></script>
        <script src="/js/ace-mode-html.js" type="text/javascript" charset="utf-8"></script>

        <script>
            var editor = ace.edit("editor");

            editor.getSession().setMode("ace/mode/html");

            fetch('/api/post/{{post._id}}').then(function(res) {
                if (res.status !== 200) {
                    // error
                    editor.setValue('res not 200: there was an error finding ur post. refresh or tweet at us ok?')
                }
                else {
                    res.json().then(function(data) {
                        if (data.success) {
                             editor.setValue(data.post);
                             updatePreview(data.post);
                        }
                    });
                }
            }).catch(function(err) {
                editor.setValue('there was an error finding ur post. refresh or tweet at us ok?');
            });
                

           function updatePreview() {
                document.getElementById('preview-iframe').srcdoc = wrapPostInStuff(editor.getValue());
           }

           function wrapPostInStuff(postHTML) {
                return `<html>
                    <head>
                    </head>
                    <body>
                        <div id="{{post._id}}">
                           ${postHTML}
                        </div>
                    </body>
                </html>`
            }

           function toggleEditor() {
                if (document.getElementById("left-half").style.display == "none") {
                    document.getElementById("left-half").style.display = "initial";
                    // document.getElementById("toggle-visibility").innerHTML = "<";
                    document.getElementById("toggle-visibility").style.left = "50%";
                    document.getElementById("post-preview").style.width = "50%";
                }
                else {
                    document.getElementById("left-half").style.display = "none";
                    document.getElementById("toggle-visibility").style.left = "0%";
                    document.getElementById("post-preview").style.width = "100%";
                    // document.getElementById("toggle-visibility").innerHTML = ">";
                }
            }

            function postIt(publish) {
                method = "post"; // Set method to post by default if not specified.

                params = {
                   post: editor.getValue(),
                   published: publish,
                   title: document.getElementById('title').value
                }
                path = "/post/{{post._id}}";

                // The rest of this code assumes you are not using a library.
                // It can be made less wordy if you use one.
                var form = document.createElement("form");
                form.setAttribute("method", method);
                form.setAttribute("action", path);

                for(var key in params) {
                    if(params.hasOwnProperty(key)) {
                        var hiddenField = document.createElement("input");
                        hiddenField.setAttribute("type", "hidden");
                        hiddenField.setAttribute("name", key);
                        hiddenField.setAttribute("value", params[key]);

                        form.appendChild(hiddenField);
                    }
                }

                document.body.appendChild(form);
                form.submit();
            }
        </script>
    </body>
</html>
